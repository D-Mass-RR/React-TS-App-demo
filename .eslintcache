[{"C:\\Users\\Daulet\\WebstormProjects\\ts-todo-list\\src\\index.tsx":"1","C:\\Users\\Daulet\\WebstormProjects\\ts-todo-list\\src\\reportWebVitals.ts":"2","C:\\Users\\Daulet\\WebstormProjects\\ts-todo-list\\src\\App.tsx":"3","C:\\Users\\Daulet\\WebstormProjects\\ts-todo-list\\src\\Components\\Navbar.tsx":"4","C:\\Users\\Daulet\\WebstormProjects\\ts-todo-list\\src\\Components\\TodoForm.tsx":"5","C:\\Users\\Daulet\\WebstormProjects\\ts-todo-list\\src\\Components\\TodoList.tsx":"6","C:\\Users\\Daulet\\WebstormProjects\\ts-todo-list\\src\\Pages\\TodosPage.tsx":"7","C:\\Users\\Daulet\\WebstormProjects\\ts-todo-list\\src\\Pages\\DeletedTodosPage.tsx":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":704,"mtime":1610991996484,"results":"12","hashOfConfig":"10"},{"size":596,"mtime":1610897745606,"results":"13","hashOfConfig":"10"},{"size":1187,"mtime":1610653513994,"results":"14","hashOfConfig":"10"},{"size":1501,"mtime":1610739920801,"results":"15","hashOfConfig":"10"},{"size":1753,"mtime":1610991384436,"results":"16","hashOfConfig":"10"},{"size":290,"mtime":1610991384536,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1gt900u",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"C:\\Users\\Daulet\\WebstormProjects\\ts-todo-list\\src\\index.tsx",[],["38","39"],"C:\\Users\\Daulet\\WebstormProjects\\ts-todo-list\\src\\reportWebVitals.ts",[],"C:\\Users\\Daulet\\WebstormProjects\\ts-todo-list\\src\\App.tsx",[],"C:\\Users\\Daulet\\WebstormProjects\\ts-todo-list\\src\\Components\\Navbar.tsx",[],"C:\\Users\\Daulet\\WebstormProjects\\ts-todo-list\\src\\Components\\TodoForm.tsx",[],["40","41"],"C:\\Users\\Daulet\\WebstormProjects\\ts-todo-list\\src\\Components\\TodoList.tsx",["42"],"import React from \"react\";\r\nimport {ITodo} from \"../interfaces\";\r\n\r\ntype TodoListProps = {\r\n    todos: ITodo[]\r\n    onRemove(id: number): void\r\n    onToggle(id: number): void\r\n}\r\n\r\nconst TodoList: React.FC<TodoListProps> = ({todos, onRemove, onToggle}) => {\r\n    if (todos.length === 0) {\r\n        return <p className=\"center\">Пока дел нет</p>\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                todos.map(todo => {\r\n                        const classes = [\"todo\", \"mr1rem\"]\r\n                        if (todo.completed) {\r\n                            classes.push(\"completed\")\r\n                        }\r\n\r\n                        return (\r\n                            <p key={todo.id} className=\"pdt1\">\r\n                                <label>\r\n                                    <input onChange={() => onToggle(todo.id)}\r\n                                           type=\"checkbox\" checked={todo.completed}/>\r\n                                    <span className={classes.join(\" \")}>{todo.title}</span>\r\n                                    <span className={classes.join(\" \")}>{todo.date}{}</span>\r\n                                </label>\r\n                                <a className=\"waves-effect waves-dark btn right mr1rem\"\r\n                                   onClick={() => onRemove(todo.id)}>remove</a>\r\n                            </p>\r\n                        )\r\n                    }\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoList","C:\\Users\\Daulet\\WebstormProjects\\ts-todo-list\\src\\Pages\\TodosPage.tsx",[],"C:\\Users\\Daulet\\WebstormProjects\\ts-todo-list\\src\\Pages\\DeletedTodosPage.tsx",["43"],"import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {ITodo} from \"../interfaces\";\r\n\r\nconst DeletedTodosPage: React.FC = () => {\r\n    return (\r\n        <>\r\n            <NavLink to=\"/\"><h1>Back</h1></NavLink>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeletedTodosPage",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"44","replacedBy":"48"},{"ruleId":"46","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":31,"column":33,"nodeType":"52","endLine":32,"endColumn":70},{"ruleId":"53","severity":1,"message":"54","line":3,"column":9,"nodeType":"55","messageId":"56","endLine":3,"endColumn":14},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],["57"],["58"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'ITodo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]